import sValue from './helpers/some.js';

export default class Bar {
    constructor(attrs) {
        this.a = attrs.a || sValue;
        this.b = attrs.b;
    }
    get c() {
        return this.a + this.b;
    }
    onClick() {
        this.a += 1;
        console.log('clicked');
    }


    // after this line, all code is generated by the build process
    // this is a generated method based on the template
    render(api) {
        const rehydrate = () => {
            if (api.isDirty(this, 'a')) {
                api.updateAttributeInMarkup(this, 'button1', 'name', this.a);
            }
            return api.componentWasRehydrated(this);
        };
        const render = () => {
            return api.createElement('button', {
                __ref: 'button1',
                name: this.a,
                onClick: (e) => this.onClick(e)
            }, [
                api.createElement('span', {
                    __ref: 'span1',
                }, ['something'])
            ]);
        };
        return api.isDirty(this) ? rehydrate() : render();
    }
}
